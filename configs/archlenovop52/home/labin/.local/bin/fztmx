# fzf and tmux sessions
fztmx() {
    # List all sessions except the current one
    list_cmd="tmux list-sessions"

    # Command to preview the session (show pane contents)
    preview_cmd="session_name=\$(echo '{1}' | cut -d: -f1 | tr -d '\n'); tmux capture-pane -ep -t \"\$session_name\""

    # Command to remove a session
    remove_cmd="session_name=\$(echo '{1}' | cut -d: -f1 | tr -d '\n'); tmux display-popup -E \"echo 'Removing session: \$session_name' && read -p 'Press Enter to confirm or Ctrl-C to cancel...'; if [ -n '\$session_name' ]; then tmux kill-session -t '\$session_name'; fi\""

    # Bind keys to actions
    bind_keys=(
        "--bind=enter:accept-or-print-query"
        "--bind=del:execute-silent($remove_cmd)"
        "--bind=del:+reload($list_cmd)"
        "--bind=del:+refresh-preview"
    )

    # Execute fzf with the above components
    selected=$(eval "$list_cmd" | fzf \
        --ansi \
        --delimiter " " --nth 1 \
        --preview "$preview_cmd" \
        --prompt "sessions â–¶ " \
        "${bind_keys[@]}" \
        --header "tmux session switcher

Enter: switch to selected session or create if not found
Del: remove selected session

")

    # Check if fzf was interrupted or no session was selected
    if [ $? -ne 0 ]; then
        return 0
    fi

    # Check if a valid session was selected or a new name was provided
    if [ -n "$selected" ]; then
        # Clean up selected session name
        selected=$(echo "$selected" | cut -d: -f1 | tr -d '\n')

        if tmux list-sessions | grep -q "^$selected"; then
            # Switch to the selected session
            if [ -n "$TMUX" ]; then
                tmux switch-client -t "$selected" &&
                    tmux list-clients -F '#{client_name}' |
                    grep -v "$(tmux display-message -p '#{client_name}')" |
                        xargs -I {} tmux detach-client -t {}
            else
                tmux attach-session -d -t "$selected"
            fi
        else
            # Create a new session if the selected session doesn't exist
            if [ -n "$TMUX" ]; then
                tmux new-session -ds "$selected" && tmux switch-client -t "$selected"
            else
                tmux new-session -s "$selected"
            fi
        fi
    else
        # No selection, create a new session
        if [ -n "$TMUX" ]; then
            tmux new-session -d && tmux switch-client -n
        else
            tmux new-session
        fi
    fi
}

fztmx
